name: eShopOnWeb Build and Test

#Triggers (uncomment line below to use it)
on: [push, workflow_dispatch]

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  RESOURCE-GROUP: rg-eshoponweb-NAME
  LOCATION: eastus
  TEMPLATE-FILE: infra/webapp.bicep
  SUBSCRIPTION-ID: e4d728fa-3b7f-46c9-b51c-ff25ddec673f
  WEBAPP-NAME: eshoponweb-webapp-3
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true


jobs:
  #Build, test and publish .net web project in repository
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    #checkout the repository
    - uses: actions/checkout@v4
    #prepare runner for desired .net version SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'preview'
    #Build/Test/Publish the .net project
    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    - name: dotnet publish
      run: |
        dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
        cd ${{env.DOTNET_ROOT}}/myapp
        zip -r ../app.zip .
    # upload the published website code artifacts
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/app.zip
        
    # upload the bicep template as artifacts for next job
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: bicep-template
        path: ${{ env.TEMPLATE-FILE }}
        
  # Use Bicep to deploy infrastructure + Publish webapp 
  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:
    
    #Download the publish files created in previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: .net-app
        path: .net-app
  
    #Download the bicep templates from previous job
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: bicep-template
        path: bicep-template
        
   #Login in your azure subscription using a service principal (credentials stored as GitHub Secret in repo)
   # - name: Azure Login
   #   uses: azure/login@v2
   #   with:
   #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Extract Azure credentials
      run: |
          echo "${{ secrets.AZURE_CREDENTIALS }}" > creds.json
          echo "AZURE_CLIENT_ID=$(jq -r .clientId creds.json)" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=$(jq -r .clientSecret creds.json)" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=$(jq -r .tenantId creds.json)" >> $GITHUB_ENV
           
    # Deploy Azure WebApp using Bicep file
    - name: Run Azure CLI using Docker (2.53.1)
      run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e AZURE_CLIENT_ID=$AZURE_CLIENT_ID \
            -e AZURE_CLIENT_SECRET=$AZURE_CLIENT_SECRET \
            -e AZURE_TENANT_ID=$AZURE_TENANT_ID \
            mcr.microsoft.com/azure-cli:2.53.1 \
            /bin/bash -c "
              az login --service-principal \
                --username \$AZURE_CLIENT_ID \
                --password \$AZURE_CLIENT_SECRET \
                --tenant \$AZURE_TENANT_ID &&
              az deployment group create \
                --subscription ${{ env.SUBSCRIPTION-ID }} \
                --resource-group ${{ env.RESOURCE-GROUP }} \
                --template-file bicep-template/webapp.bicep \
                --parameters webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }} \
                --only-show-errors \
                --no-prompt"
     
     
      
    # Publish website to Azure App Service (WebApp)
    - name: Deploy web app ZIP package
      uses: Azure/webapps-deploy@v3
      with:
           app-name: ${{ env.WEBAPP-NAME }}
           package: .net-app/app.zip
           type: zip
